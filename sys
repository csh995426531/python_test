%!PS-Adobe-3.0
%%Creator: (ImageMagick)
%%Title: (sys)
%%CreationDate: (2017-11-08T14:37:22+08:00)
%%BoundingBox: 1370 398 1387 496
%%HiResBoundingBox: 1370 398 1387 496
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Orientation: Portrait
%%PageOrder: Ascend
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
  showpage
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 1370 398 1387 496
DisplayImage
1370 398
17 98
12
17 98
0
0
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822272822
272822272822272822272822272822272822272822272822272822272822272822272822262721
262721262721262721262721262721262721262721262721262721262721262721262721262721
262721262721262721252620252620252620252620252620252620252620252620252620252620
252620252620252620252620252620252620252620242520242520242520242520242520242520
24252024252024252024252024252024252024252024252024252024252024252024251F24251F
24251F24251F24251F24251F24251F24251F24251F24251F24251F24251F24251F24251F24251F
24251F24251F666666666666666666666666666666666666666666666666666666666666666666
666666666666666666666666666666666666E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6
E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E4E4E4E4E4E4E4E4E4
E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4
E4E4E4E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3
E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2
E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E1E1E1E1E1E1E1E1E1E1E1E1
E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1
DFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDF
DFDFDFDFDFDFDFDFDFDFDFDFDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDE
DEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDCDCDC
DCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDC
DCDCDCDCDCDCDCDCDCDADADADADADADADADADADADADADADADADADADADADADADADADADADADADADA
DADADADADADADADADADADADADADADADADADADADADAD9D9D95C5C5C4F4F4F4F4F4F5555556C6C6C
B3B3B3D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D8D8D84A4A4A
4747479F9F9F898989454545424242D6D6D6D8D8D8D8D8D8D8D8D8D8D8D8D8D8D8D8D8D8D8D8D8
D8D8D8D8D8D8D7D7D74A4A4A545454FCFCFCEAEAEA8282823C3C3CDCDCDCDADADACECECE7E7E7E
565656646464AAAAAAD7D7D7D7D7D7A4A4A4D6D6D64A4A4A4D4D4DC6C6C69595954A4A4A626262
FDFDFDDBDBDB5E5E5E3E3E3E7C7C7C5B5B5B3C3C3CB1B1B1D6D6D6CFCFCFD4D4D44A4A4A3C3C3C
3C3C3C3C3C3C3C3C3C9D9D9DF1F1F1ACACAC3C3C3C848484FFFFFFDCDCDC3C3C3C686868E1E1E1
D4D4D4D3D3D34A4A4A525252F6F6F6E5E5E5A2A2A23C3C3C9494949393933C3C3CB2B2B2EEEEEE
D3D3D34E4E4E474747F5F5F5D3D3D3D2D2D24A4A4A545454FAFAFAD4D4D4C8C8C83C3C3C808080
B0B0B03C3C3C969696E4E4E4CBCBCB3E3E3E5B5B5BFCFCFCD2D2D2D1D1D14A4A4A4B4B4BB2B2B2
8B8B8B5B5B5B3C3C3CB4B4B4E3E3E34B4B4B4E4E4EADADAD7777773C3C3CA0A0A0F7F7F7CBCBCB
D3D3D34A4A4A3C3C3C3C3C3C404040575757A4A4A4FEFEFEE1E1E1AFAFAF5555553C3C3C3E3E3E
858585FBFBFBE6E6E6838383E3E3E3CECECEFBFBFBFFFFFFFFFFFFFEFEFEF7F7F7E3E3E3CECECE
CECECED8D8D8E3E3E3F7F7F7FFFFFFEBEBEBCFCFCFCECECED0D0D0CECECECECECECECECECECECE
CECECECECECECECECECECECECECECECECECECECECED4D4D4D0D0D0CECECECECECECECECECECECE
CECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECE
CECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECE
CECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECE
CECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECE
CECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECE
CECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECE
CECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECE
CECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECE
CECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECE
CECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECE
CECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECE
CECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECE
CECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECE
CECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECE
CECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECE
CECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECE
CECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECE
CECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECE
CECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECE
CECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECE
C7C7C7C0C0C0CECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECE
CECECECCCCCCC1C1C1C1C1C1949494676767C1C1C1C1C1C1B7B7B7777777777777777777777777
B7B7B7CECECE

%%PageTrailer
%%Trailer
%%EOF
